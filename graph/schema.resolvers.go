package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/alice-beatriz/gqlgen-mongo/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// CreateCar is the resolver for the createCar field.
func (r *mutationResolver) CreateCar(ctx context.Context, input model.CarInput) (*model.Car, error) {
	return model.CreateCar(ctx, input)
}

// CreatePerson is the resolver for the createPerson field.
func (r *mutationResolver) CreatePerson(ctx context.Context, input model.PersonInput) (*model.Person, error) {
	return model.CreatePerson(ctx, input)
}

// Cars is the resolver for the cars field.
func (r *queryResolver) Cars(ctx context.Context) ([]*model.Car, error) {
	return model.GetCars(ctx)
}

// Car is the resolver for the car field.
func (r *queryResolver) Car(ctx context.Context, id primitive.ObjectID) (*model.Car, error) {
	return model.GetCar(ctx, id)
}

// Persons is the resolver for the persons field.
func (r *queryResolver) Persons(ctx context.Context) ([]*model.Person, error) {
	return model.GetPersons(ctx)
}

// Person is the resolver for the person field.
func (r *queryResolver) Person(ctx context.Context, id primitive.ObjectID) (*model.Person, error) {
	return model.GetPerson(ctx, id)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
